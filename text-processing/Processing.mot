#MotmotF

┌────────────────────────────────────────────────────┐
│ Copyright 2020-2024 K.D.P.Ross <KDPRoss@gmail.com> │
│                                                    │
│ This code is licensed only for study and personal  │
│ enrichment.                                        │
└────────────────────────────────────────────────────┘

#load [
  $Document.Rendering$,
  $Document.Structure$,
  $Processing.DSL$,
  $Processing.Text$,
]

#using $Processing.DSL$

input-file : String = $SampleDocument.txt.mot$

processing : MarkdownRewritePack =
  markdown-base
  +library Libraries.Syntax.punctuation

basic-processing : () -> () = thunk (
  processing
  ->markdown-file-now {
    input-file,
    output-file ~ $[.].*$ =>r $.basic.md$ input-file,
  }
)

cached-processing : () -> () = thunk (
  processing
  +cache-file $Markdown.process-line.mot.cache$
  ->markdown-file-now {
    input-file,
    output-file ~ $[.].*$ =>r $.cached.md$ input-file,
  }
)

custom-processing : () -> () = thunk (
  input-file |>
    read-file-progress-stream >>
    -- Preprocessing: Remove comments, do some arbitrary demo
    -- step, group in paragraphs.
    Processing.Text.strip-comments >>
    -- Somewhat arbitrarily, remove all source-file lines
    -- containing the string `nunc`.
    filter-stream (
      lowercase >>
      (_ ~=s $nunc$) >>
      not
    ) >> Processing.Text.paragraphs >>
    map-stream capitalise >>
    -- Apply the slightly-customised processing, respecting the
    -- TML-encoded document structure.
    Processing.Text.parse-and-process process-line >>
    -- Render back to text and apply minor postprocessing.
    (Document.Rendering.markdown render-settings).render-stream >>
    Document.Structure.compress-blanks-string >>
    write-file-stream output-file
)
where output-file                             = $[.].*$ =>r $.custom.md$ input-file
    | render-settings : RenderMarkdownOptions = -- Take rendering defaults but increase wrapping column.
                                                { Document.Rendering.Settings.Markdown.defaults...,
                                                  wrap-width ~ 80,
                                                }
    | process-line : String -> String =
        -- Use the common processing but remove the title.
        processing
        +trees [
          {[[Centre]] ---} ~ Fake!
        ]
        -- Can't share the cache with `cached-processing`, since
        -- they're doing different things.
        +cache-file $Markdown.process-line-custom.mot.cache$
        ->string ()
    | capitalise : String -> String =
        -- Ensure that the first word of each paragraph is
        -- capitalised.
        s : String ~
          $#{s |> take-string 1 >> uppercase}#{drop-string 1 s}$
